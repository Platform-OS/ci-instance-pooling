{% liquid 
  assign c = '{ "errors": {}, "valid": true }' | parse_json

  function c = 'modules/core/validations/presence', c: c, object: object, field_name: 'domain', key: 'modules/core/validation.blank'  

  function is_url = 'is_url', url: object.providedDomain

  if is_url != true 
    function c = 'modules/core/helpers/register_error', contract: c, field_name: 'domain', key: 'modules/core/validation.not_url'
  else
    function c = 'modules/core/validations/uniqueness', c: c, object: object, field_name: 'domain', table: 'instance', scope_name: null, exclude_name: null
  endif

  function c = 'modules/core/validations/presence', c: c, object: object, field_name: 'pos_cli_token', key: 'modules/core/validation.blank'
  function c = 'modules/core/validations/length', c: c, object: object, field_name: 'pos_cli_token', minimum: 43, maximum: 43, key: 'modules/core/validation.length.minimum'

  hash_assign object['valid'] = c.valid
  hash_assign object['errors'] = c.errors

  return object
%}